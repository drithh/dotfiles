{
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  },
  "[dart]": {
    "editor.defaultFormatter": "Dart-Code.dart-code"
  },
  "C_Cpp.autocompleteAddParentheses": true,
  "C_Cpp.formatting": "clangFormat",
  "C_Cpp.intelliSenseCacheSize": 2,
  "editor.scrollbar.verticalScrollbarSize": 5,
  "editor.scrollbar.horizontalScrollbarSize": 5,
  "editor.smoothScrolling": true,
  "C_Cpp.intelliSenseEngineFallback": "enabled",
  "C_Cpp.intelliSenseUpdateDelay": 500,
  "C_Cpp.suggestSnippets": false,
  "clang-format.executable": "/usr/bin/clang-format",
  "clang-format.language.cpp.enable": true,
  "clang-format.language.java.enable": false,
  "clang-format.language.javascript.enable": false,
  "clang-format.language.typescript.enable": false,
  "clang-format.style": "{ColumnLimit: '80', SortIncludes: false,IndentWidth: 2, AllowShortFunctionsOnASingleLine: None, MaxEmptyLinesToKeep: 3, BreakBeforeBraces: Custom, BraceWrapping: {AfterControlStatement: false, AfterFunction: false, BeforeElse: true, SplitEmptyFunction: false}}",
  "clang-tidy.blacklist": ["^.+(?<!\\.c|cpp|cc)$"],
  "clang-tidy.executable": "/bin/clang-tidy",
  "clang-tidy.lintOnSave": false,
  "customizeUI.stylesheet": {
    ".editor-actions": "display: none !important;",
    ".tabs-and-actions-container:hover .editor-actions": "display: flex !important;",
    ".title > .title-actions ": "display: none !important;",
    ".title:hover > .title-actions ": "display: flex !important;"
    // ".activitybar": "transform: scaleX(0.8) !important; transform-origin: right !important;",
    // ".activitybar .action-item": "transform: scaleY(0.8) !important;",
    // ".monaco-grid-branch-node .monaco-split-view2.horizontal": "position: absolute !important; left: -9.6px !important;"
    // "#workbench\\.parts\\.sidebar": "position: absolute !important; left: -9.6px !important;"
    // ".search-view .search-widgets-container": "padding-top: 0px !important",
    // ".suggest-input-container": "padding: 3px 4px 3px !important;",
    // // the below removes toolbars everywhere
    // // ".monaco-toolbar": "display: none !important;",
    // ".nopanel.nosidebar.nostatusbar.fullscreen .monaco-toolbar": "display:none",
    // // https://github.com/iocave/customize-ui/issues/29
    // ".monaco-workbench .part.editor>.content .editor-group-container>.title .editor-actions .action-label, .monaco-workbench .part.editor>.content .editor-group-container>.title .title-actions .action-label": "height: 28px",
    // ".monaco-workbench .part.editor>.content .editor-group-container>.title .tabs-container>.tab": "height: 28px",
    // ".monaco-workbench .part.editor>.content .editor-group-container>.title .tabs-container": "height: 28px",
    // ".monaco-workbench .part.editor>.content .editor-group-container>.title .editor-actions": "height: 28px",
    // // This isn't in the original CSS, but there's a pesky `style="height: 35px"` in a child element
    // ".monaco-workbench .part.editor>.content .editor-group-container>.title .tabs-and-actions-container": "height: 28px; overflow-y: hidden;",
    // // side bar actions
    // ".monaco-workbench .part>.title": "height: 28px;",
    // ".monaco-workbench .part>.title>.title-label": "line-height: 28px;",
    // ".monaco-workbench .part>.title>.title-actions": "height: 28px;",
    // ".monaco-workbench .part>.title>.title-actions .action-label": "height: 28px; line-height: 28px;",
    // // panel tabs / actions
    // ".monaco-workbench .part.panel>.title>.panel-switcher-container>.monaco-action-bar": "height: 28px;",
    // // The padding for this is top: 3px; bottom: 4px, which is exactly the offset we need.
    // ".monaco-workbench .part.panel>.title>.panel-switcher-container>.monaco-action-bar .action-item": "padding-top: 0; padding-bottom: 0;",
    // ".monaco-workbench .part.panel .title": "height: 28px;",
    // "window.nativeFullScreen": false
  },
  "dart.env": {
    "CHROME_EXECUTABLE": "/usr/bin/brave-bin"
  },
  "dart.flutterAttachAdditionalArgs": ["--scan"],
  "editor.bracketPairColorization.enabled": true,
  "editor.cursorBlinking": "expand",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.cursorStyle": "line",
  // "editor.cursorWidth": 9,
  // "editor.cursorWidth": 2,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.foldingImportsByDefault": true,
  "editor.fontFamily": "'Hasklug Nerd Font', 'Courier New', 'FiraCode Nerd Font', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 15,
  "editor.fontWeight": 300,
  "editor.glyphMargin": true,
  "editor.guides.bracketPairs": true,
  "editor.inlineSuggest.enabled": true,
  "editor.largeFileOptimizations": false,
  "editor.lineNumbers": "on",
  "editor.linkedEditing": true,
  "editor.mouseWheelZoom": false,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.quickSuggestions": {
    "comments": false,
    "other": true,
    "strings": true
  },
  "tailwindCSS.includeLanguages": {
    "javascript": "javascript",
    "typescript": "typescriptreact",
    "html": "HTML"
  },
  "editor.quickSuggestionsDelay": 1,
  "editor.suggest.preview": true,
  "editor.suggestSelection": "first",
  // "editor.tabCompletion": "on",
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact",
    "vue-html": "html",
    "vue": "html"
  },
  "emmet.showSuggestionsAsSnippets": true,
  "es6-css-minify.minifyOnSave": "yes",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "extensions.ignoreRecommendations": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.ignoreRebaseWarning": true,
  "github.copilot.inlineSuggest.enable": true,
  "importCost.timeout": 100000,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "liveServer.settings.AdvanceCustomBrowserCmdLine": "brave-bin",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  "editor.wordWrap": "on",
  "mssql.connections": [
    {
      "authenticationType": "SqlLogin",
      "database": "",
      "emptyPasswordInput": false,
      "password": "",
      "savePassword": true,
      "server": "128.199.108.148",
      "user": "SA"
    },
    {
      "server": "localhost",
      "database": "",
      "authenticationType": "SqlLogin",
      "user": "sa",
      "password": "",
      "emptyPasswordInput": false,
      "savePassword": true
    },
    {
      "server": "dataverse.mssql.somee.com",
      "database": "dataverse",
      "authenticationType": "SqlLogin",
      "user": "someeweb",
      "password": "",
      "emptyPasswordInput": false,
      "savePassword": true
    }
  ],
  "multiCommand.commands": [
    {
      "command": "multiCommand.lint",
      "sequence": ["clang-tidy.lintFile", "workbench.action.files.revert"]
    },
    {
      "key": "ctrl+shift+alt+4",
      "command": "multiCommand.runAndSave",
      "sequence": [
        "workbench.action.files.save",
        "workbench.output.action.clearOutput",
        "code-runner.run"
      ]
    },
    {
      "command": "multiCommand.panelToggle",
      "sequence": [
        "workbench.action.toggleActivityBarVisibility",
        "workbench.action.toggleStatusbarVisibility",
        "editor.action.toggleMinimap",
        "breadcrumbs.toggle"
        // "workbench.action.toggleMenuBar",
      ]
    },
    {
      "command": "multiCommand.zoom",
      "sequence": ["terminal.integrated.fontSize: 20"]
    }
  ],
  "prettier.singleQuote": true,
  "remote.extensionKind": {
    "ms-azuretools.vscode-docker": "workspace"
  },
  "remote.SSH.remotePlatform": {
    "178.128.119.246": "linux",
    "20.39.198.37": "windows",
    "159.65.1.215": "windows",
    "188.166.230.150": "windows",
    "34.126.176.93": "linux",
    "34.124.154.117": "linux",
    "34.87.49.102": "linux",
    "35.240.188.90": "linux"
  },
  "javascript.validate.enable": false,
  "remote.WSL.fileWatcher.pollingInterval": 100,
  "security.workspace.trust.enabled": false,
  "security.workspace.trust.startupPrompt": "never",
  "security.workspace.trust.untrustedFiles": "open",
  "tabnine.experimentalAutoImports": true,
  "terminal.explorerKind": "external",
  "terminal.external.linuxExec": "alacritty",
  "terminal.external.osxExec": "Terminal.appr",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontWeight": "400",
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.scrollback": 100000000,
  "vim.easymotion": true,
  "vim.timeout": 200,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.sneak": true,
  "vim.easymotionMarkerooundColor": "#020202",
  "vim.normalModeKeyBindings": [
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      "before": ["<tab>"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["<S-tab>"],
      "commands": ["workbench.action.previousEditor"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-j>"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-k>"],
      "after": ["<Esc>"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [">"],
      "after": [">", "g", "v"]
    },
    {
      "before": ["<"],
      "after": ["<", "g", "v"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "d"],
      "after": ["d", "d"]
    },
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "f"],
      "commands": ["revealInExplorer"]
    },
    {
      "before": ["<leader>", "h"],
      "after": ["_"]
    },
    {
      "before": ["<leader>", "l"],
      "after": ["$"]
    }
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    // VS Code new marker @ next occurence
    "<C-c>": false,
    // Cut
    "<C-x>": false,
    // Paste
    "<C-v>": false,
    "<C-z>": false,
    "<C-y>": false
  },
  "vscode-edge-devtools.mirrorEdits": true,
  "vscode-edge-devtools.webhint": false,
  "window.autoDetectColorScheme": true,
  "window.title": "${dirty}${activeEditorShort}${separator}${folderName}",
  "workbench.colorCustomizations": {
    "scrollbar.shadow": "#ffffff00",
    "widget.shadow": "#ffffff00"
  },
  "workbench.layoutControl.type": "both",
  "workbench.editor.tabCloseButton": "off",
  "workbench.colorTheme": "Catppuccin Noctis",
  "workbench.preferredDarkColorTheme": "Catppuccin Noctis",
  "workbench.preferredLightColorTheme": "Vitesse Light Soft",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.autoSaveDelay": 200,
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "shellscript": true,
    "javascript": true,
    "python": true,
    "cpp": true
  },
  "[blade]": {
    "editor.defaultFormatter": "shufo.vscode-blade-formatter"
  },
  "bladeFormatter.format.indentSize": 2,
  "codesnap.showLineNumbers": false,
  "codesnap.showWindowTitle": true,
  "codesnap.transparentBackground": true,
  "codesnap.containerPadding": "0em",
  "codesnap.roundedCorners": false,
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvimx",
  "remote.otherPortsAttributes": {
    "onAutoForward": "openBrowser"
  },
  "emmet.optimizeStylesheetParsing": false,
  "workbench.startupEditor": "none",
  "dart.openDevTools": "flutter",
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
  },
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "npm.keybindingsChangedWarningShown": true,
  "editor.tabSize": 2,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js ",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, histoire.config.*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, histoire.config.*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, vitest.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "workbench.iconTheme": "eq-material-theme-icons-ocean",
  "code-runner.executorMap": {
    "javascript": "node",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "cpp": "g++ -DLOCAL $fileName -o $fileNameWithoutExt && ./$fileNameWithoutExt",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "php": "php",
    "python": "python -u",
    "perl": "perl",
    "perl6": "perl6",
    "ruby": "ruby",
    "go": "go run",
    "lua": "lua",
    "groovy": "groovy",
    "powershell": "powershell -ExecutionPolicy ByPass -File",
    "bat": "cmd /c",
    "shellscript": "bash",
    "fsharp": "fsi",
    "csharp": "scriptcs",
    "vbscript": "cscript //Nologo",
    "typescript": "ts-node",
    "coffeescript": "coffee",
    "scala": "scala",
    "swift": "swift",
    "julia": "julia",
    "crystal": "crystal",
    "ocaml": "ocaml",
    "r": "Rscript",
    "applescript": "osascript",
    "clojure": "lein exec",
    "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "racket": "racket",
    "scheme": "csi -script",
    "ahk": "autohotkey",
    "autoit": "autoit3",
    "dart": "dart",
    "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "haskell": "runhaskell",
    "nim": "nim compile --verbosity:0 --hints:off --run",
    "lisp": "sbcl --script",
    "kit": "kitc --run",
    "v": "v run",
    "sass": "sass --style expanded",
    "scss": "scss --style expanded",
    "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "sml": "cd $dir && sml $fileName"
  },
  "code-runner.runInTerminal": true,
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "[cpp]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python"
  },
  "vsicons.dontShowNewVersionMessage": true,
  "editor.stickyScroll.enabled": true,
  // "polacode.shadow": "rgba(0, 0, 0, 0.55) 0px 0px 0px",
  // "polacode.target": "snippet",
  // "polacode.transparentBackground": true,
  // "polacode.backgroundColor": "#ffff"
  "sqltools.connections": [
    {
      "mysqlOptions": {
        "authProtocol": "default"
      },
      "previewLimit": 50,
      "server": "35.198.203.10",
      "port": 5432,
      "askForPassword": false,
      "password": "gysxKk",
      "driver": "PostgreSQL",
      "name": "Assignment-3",
      "database": "sc-be-db",
      "username": "students",
      "group": "sc"
    },
    {
      "previewLimit": 50,
      "server": "localhost",
      "port": 15432,
      "driver": "PostgreSQL",
      "name": "backoffice",
      "group": "erp",
      "database": "erp",
      "username": "erp_user",
      "password": ""
    },
    {
      "previewLimit": 50,
      "server": "localhost",
      "port": 25432,
      "driver": "PostgreSQL",
      "name": "dbmigrations",
      "group": "erp",
      "database": "dbmigrations",
      "username": "postgres",
      "password": ""
    },
    {
      "previewLimit": 50,
      "server": "localhost",
      "port": 5432,
      "driver": "PostgreSQL",
      "name": "app",
      "group": "sc",
      "database": "app",
      "username": "postgres",
      "password": "ayam1513"
    }
  ],
  "githubPullRequests.pullBranch": "never",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "editor.tabCompletion": "on",
  "editor.snippetSuggestions": "top",
  "files.autoSave": "onFocusChange",
  "rapidapi.terminalLink.enabled": false,
  "js/ts.implicitProjectConfig.checkJs": true,
  "workbench.layoutControl.enabled": false,
  "window.menuBarVisibility": "toggle",
  "editor.accessibilitySupport": "off",
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.editor.enablePreview": false,
  "editor.formatOnSave": true
}
